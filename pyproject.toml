[tool.poetry]
name = "semgrep-search"
version = "1.1.0"
description = "A tool to generate a custom Semgrep ruleset from multiple sources"
authors = ["Malte Heinzelmann <malte@cybaer.ninja>"]
readme = "README.md"
license = "GPL-3.0-or-later"
homepage = "https://github.com/hnzlmnn/semgrep-search"
packages = [{include = "sgs"}]

[tool.poetry.scripts]
sgs = "sgs.main:main"

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.31.0"
PyYAML = "^6.0"
oras = "^0.1.27"
tinydb = "^4.8.0"
ruamel-yaml = "^0.18.6"
babel = "^2.14.0"
rich = "^13.7.1"
semver = "^3.0.2"
tomli = "^2.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

include = ["**/*.py"]
target-version = "py38"

# Allow lines to be as long as 120 characters.
line-length = 120

# Group violations by containing file.
output-format = "full"

[tool.ruff.lint]

# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "N", "W", "Q", "SLF", "SIM", "T20", "ERA", "TD", "COM",
    "YTT", "ANN", "S", "BLE", "FBT", "B", "COM", "C4", "DTZ", "T10", "FA",
    "ISC", "ICN", "INP", "PIE", "T20", "PYI",  "PT", "Q", "RSE", "RET",
    "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX"]
ignore = ["BLE001", "ANN101", "ERA001"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Make sure autofix doesn't delete imports from __init__.py
ignore-init-module-imports = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"
